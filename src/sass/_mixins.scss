@use "./var";

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}

@mixin bg-light {
  background-color: var.$color-light;
  color: var.$color-dark;
}
@mixin bg-dark {
  background-color: var.$color-dark;
  color: var.$color-light;
}
@mixin bg-primary {
  background-color: var.$color-primary;
  color: var.$color-dark;
}

@mixin scroll-container {
  height: 330svh;
  position: relative;
  width: 100%;
}
@mixin pos-sticky {
  position: sticky;
  top: 0;
  left: 0;
}

@mixin flex-col {
  display: flex;
  flex-direction: column;
}
@mixin flex-start {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}
@mixin absolute-full {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

@mixin px-default {
  padding-left: 4.8rem;
  padding-right: 4.8rem;
  @include respond(tab-land) {
    padding-left: 4rem;
    padding-right: 4rem;
  }
  @include respond(tab-port) {
    padding-left: 3.2rem;
    padding-right: 3.2rem;
  }
  @include respond(phone) {
    padding-left: 2.4rem;
    padding-right: 2.4rem;
  }
}

@mixin grid-full {
  display: grid;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}
